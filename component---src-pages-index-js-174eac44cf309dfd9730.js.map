{"version":3,"file":"component---src-pages-index-js-174eac44cf309dfd9730.js","mappings":"uLAAA,EAAe,IAA0B,0DCwDzC,EA7CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,aAgBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OADAC,QAAQC,IAAIF,GAEV,uBAAKG,UAAU,OACb,uBACEA,UAAU,aACVC,IAAKC,EACLC,MAAO,GACPC,OAAQ,GACRC,IAAI,KAEN,qBAAGC,MAAO,CAAEC,SAAU,MAAtB,mBACmB,IACjB,qBACEC,KAAMX,EAAOY,OACbH,MAAO,CAAEI,eAAgB,QACzBC,OAAO,SACPC,IAAI,cAEHlB,EAAOmB,MARZ,IASQ,IACLnB,EAAOoB,Y,kFCoBhB,UA/DkB,SAAC,GAAwB,IAAD,EAArBtB,EAAqB,EAArBA,KAAMuB,EAAe,EAAfA,SACnBC,GAAY,UAAAxB,EAAKG,KAAKC,oBAAV,eAAwBqB,QAAxB,QACZC,EAAQ1B,EAAK2B,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,sBAAIX,MAAO,CAAEgB,UAAU,SACpBJ,EAAMK,KAAI,SAAAC,GACT,IAAMP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE3B,UAAU,iBACV6B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YACZhB,EAAO,IACR,wBAAMX,MAAO,CAAE4B,MAAO,YACQ,QAA3BV,EAAKC,YAAYU,OAAjB,4BAKT,6BAAQX,EAAKC,YAAYW,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQd,EAAKC,YAAYc,aAAef,EAAKgB,SAE/CP,SAAS","sources":["webpack://gatsby-starter-blog/./src/images/profile-pic.png","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/profile-pic-49c052ca1dbde8a43cb0aa7ba4099997.png\";","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport avatar from \"../images/profile-pic.png\";\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n  console.log(social);\n  return (\n    <div className=\"bio\">\n      <img\n        className=\"bio-avatar\"\n        src={avatar}\n        width={75}\n        height={75}\n        alt=\"\"\n      />\n      <p style={{ maxWidth: 292 }}>\n        Personal blog by{\" \"}\n        <a\n          href={social.github}\n          style={{ textDecoration: \"none\" }}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {author.name}\n        </a>.{\" \"}\n        {author.summary}\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">\n                        {title}{\" \"}\n                        <span style={{ color: \"#ef9595\" }}>\n                          {post.frontmatter.stage === \"dev\" && `(article in progress)`}\n                        </span>\n                      </span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          stage\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","console","log","className","src","avatar","width","height","alt","style","maxWidth","href","github","textDecoration","target","rel","name","summary","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","color","stage","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/MIND-FrontStack/","result":{"data":{"site":{"siteMetadata":{"title":"EID Blog"}},"markdownRemark":{"id":"dad59b1e-e22a-5a14-bf4c-1a67efd5f753","excerpt":"React + TS Мы используем React, так как у наших программистов больше всего опыта именно в нём.\nTypeScript нужен нам для упрощения процесса разработки и…","html":"<h2>React + TS</h2>\n<p>Мы используем React, так как у наших программистов больше всего опыта именно в нём.\nTypeScript нужен нам для упрощения процесса разработки и масштабирования проекта.</p>\n<img src=\"https://user-images.githubusercontent.com/57585370/139906993-9004e726-97df-4a1c-8f5c-5aceceb3fc75.png\" width=\"100%\">\n<p>Если у вас еще нет опыта работы с UI библиотекой/фреймворком, то советуем вам начать с React.\nВы быстро освоите его и сможете создавать MVP ваших SPA. У React очень хорошая <a href=\"https://reactjs.org/tutorial/tutorial.html#what-is-react\">документация</a> и удобная <a href=\"https://create-react-app.dev/docs/getting-started\">утилита</a> для старта проекта.\nЕсли же вам нужен SSR, то можете использовать <a href=\"https://nextjs.org/\">Next.js</a>.</p>\n<h2>Redux</h2>\n<p>По началу нам не требовался state-менеджер, но с ростом приложения мы поняли,\nчто он облегчит нам жизнь. State-менеджер управляет всем: от темы и языка до\nличных данных пользователя. Главный конкурент redux - mobX, но у нашей команды больше опыта\nв работе с redux, поэтому на нём и остановились. На этом <a href=\"https://redux.js.org/introduction/getting-started\">сайте</a> вы можете познакомиться с redux.</p>\n<img src=\"https://user-images.githubusercontent.com/57585370/139907197-aeb3dd57-9080-4afe-abcc-a6383f62a774.png\" width=\"100%\">\n<h2>Styled-components</h2>\n<p>Styled-components позволяет вам писать css прямо внутри js.\nПрекрасное решение для изоляции css и коммуникации между логики на js и стилей.\nПочитайте <a href=\"https://styled-components.com/docs\">документацию</a> styled-components. В качестве альтернативы можно использовать,\nвстроенные в react, <a href=\"https://create-react-app.dev/docs/adding-a-css-modules-stylesheet/\">css-modules</a>.</p>\n<p style=\"text-align: center\"><img src=\"https://user-images.githubusercontent.com/57585370/139907298-9af61373-c1d0-4fdf-b13d-9e8876f95f9f.png\" width=\"20%\"></p>\n<h2>Storybook</h2>\n<p>С помощью storybook вы можете создавать и тестировать ваши компоненты в отрыве от самого приложения.\nОчень удобно не запускать все приложения целиком, а только нужные вам компоненты.\nЕсли вы планируете создать сложный SPA, то <a href=\"https://storybook.js.org/\">storybook</a> вам необходим.</p>\n<img src=\"https://user-images.githubusercontent.com/57585370/139907372-3a444e4e-e2e8-4240-8dcd-b50ff3ce2afe.png\" width=\"100%\">\n<h2>Eslint + Prettier</h2>\n<p>Для поддержки единого стиля кода мы используем ESLint и prettier. Можете ознакомиться с нашим конфигом <a href=\"https://github.com/Mind-team/smart-parking-system-client-web/blob/master/.eslintrc\">ESLint</a>.</p>\n<img src=\"https://user-images.githubusercontent.com/57585370/139907459-22af2ea6-8b94-48af-a9ff-1cae347ca5d3.png\" width=\"100%\">\n<h2>CI</h2>\n<p>В качестве CI мы используем Github Actions. Каждый коммит в главную ветку проверяется на соблюдение код стайла,\nуспешную сборку приложения и storybook.</p>\n<h2>React-comet, comet-cli</h2>\n<p>Для быстрого старта приложения вы можете использовать <a href=\"https://github.com/Ermolaev-Inc/react-comet\">react-comet</a>,\nа для удобной последующей работы с ним <a href=\"https://github.com/Ermolaev-Inc/comet-cli\">comet-cli</a>.</p>","frontmatter":{"title":"Наш технологический стек на фронте","date":null,"description":"SmartParkingSystem Client Stack"}},"previous":{"fields":{"slug":"/Prototypes/"},"frontmatter":{"title":"Prototypes"}},"next":null},"pageContext":{"id":"dad59b1e-e22a-5a14-bf4c-1a67efd5f753","previousPostId":"aa8a02da-76ed-5c49-9abc-202f27a07d7f","nextPostId":null}},"staticQueryHashes":["230163734","2841359383"]}